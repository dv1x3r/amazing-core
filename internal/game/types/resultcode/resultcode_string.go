// Code generated by "stringer -type=ResultCode"; DO NOT EDIT.

package resultcode

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INCOMPLETE - -1]
	_ = x[OK-0]
	_ = x[APP-5]
	_ = x[APP_DB-6]
	_ = x[ERR-10]
	_ = x[QUEUE-11]
	_ = x[DB-20]
	_ = x[DB_QUEUE-21]
	_ = x[DB_NO_RETRY-22]
	_ = x[NO_MEM-30]
	_ = x[COMM-40]
	_ = x[CONN_FAILED-41]
	_ = x[DISCONNECT-42]
	_ = x[SHUTDOWN-43]
	_ = x[IO-44]
	_ = x[TIMEOUT-45]
	_ = x[BUSY-46]
	_ = x[COMM_INIT-47]
	_ = x[CANCEL-48]
	_ = x[WOULD_BLOCK-49]
	_ = x[PROTOCOL_VER-50]
	_ = x[SERIALIZE-51]
	_ = x[PENDING_IO-52]
	_ = x[ASYNC-53]
	_ = x[CONN-54]
	_ = x[CHNL_CLOSED-55]
	_ = x[CONN_EXHST-56]
	_ = x[NO_DEST-57]
	_ = x[CHRONO-58]
	_ = x[NOT_READY-59]
}

const (
	_ResultCode_name_0 = "INCOMPLETEOK"
	_ResultCode_name_1 = "APPAPP_DB"
	_ResultCode_name_2 = "ERRQUEUE"
	_ResultCode_name_3 = "DBDB_QUEUEDB_NO_RETRY"
	_ResultCode_name_4 = "NO_MEM"
	_ResultCode_name_5 = "COMMCONN_FAILEDDISCONNECTSHUTDOWNIOTIMEOUTBUSYCOMM_INITCANCELWOULD_BLOCKPROTOCOL_VERSERIALIZEPENDING_IOASYNCCONNCHNL_CLOSEDCONN_EXHSTNO_DESTCHRONONOT_READY"
)

var (
	_ResultCode_index_0 = [...]uint8{0, 10, 12}
	_ResultCode_index_1 = [...]uint8{0, 3, 9}
	_ResultCode_index_2 = [...]uint8{0, 3, 8}
	_ResultCode_index_3 = [...]uint8{0, 2, 10, 21}
	_ResultCode_index_5 = [...]uint8{0, 4, 15, 25, 33, 35, 42, 46, 55, 61, 72, 84, 93, 103, 108, 112, 123, 133, 140, 146, 155}
)

func (i ResultCode) String() string {
	switch {
	case -1 <= i && i <= 0:
		i -= -1
		return _ResultCode_name_0[_ResultCode_index_0[i]:_ResultCode_index_0[i+1]]
	case 5 <= i && i <= 6:
		i -= 5
		return _ResultCode_name_1[_ResultCode_index_1[i]:_ResultCode_index_1[i+1]]
	case 10 <= i && i <= 11:
		i -= 10
		return _ResultCode_name_2[_ResultCode_index_2[i]:_ResultCode_index_2[i+1]]
	case 20 <= i && i <= 22:
		i -= 20
		return _ResultCode_name_3[_ResultCode_index_3[i]:_ResultCode_index_3[i+1]]
	case i == 30:
		return _ResultCode_name_4
	case 40 <= i && i <= 59:
		i -= 40
		return _ResultCode_name_5[_ResultCode_index_5[i]:_ResultCode_index_5[i+1]]
	default:
		return "ResultCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
